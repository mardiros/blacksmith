[project]
authors = [{ name = "Guillaume Gauvrit", email = "guillaume@gauvr.it" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
    "Typing :: Typed",
]
description = "REST API Client designed for microservices"
license = { text = "MIT License" }
name = "Blacksmith"
readme = "README.rst"
requires-python = ">=3.9"
version = "4.1.1"

dependencies = [
    "httpx>=0.28",
    "purgatory>=2.0.0",
    "pydantic>=2.6.0",
    "result>=0.11.0, <1",
]

[project.urls]
Homepage = "https://mardiros.github.io/blacksmith"
Documentation = "https://mardiros.github.io/blacksmith"
Repository = "https://github.com/mardiros/blacksmith.git"
Issues = "https://github.com/mardiros/blacksmith/issues"
Changelog = "https://mardiros.github.io/blacksmith/user/changelog.html"

[tool.pdm.build]
includes = ["src", "CHANGELOG.rst"]
excludes = ["tests"]

[project.optional-dependencies]
http_cache_async = ["redis >=5.0.4,<6"]
http_cache_sync = ["redis >=5.0.4,<6"]
prometheus = ["prometheus-client >= 0.19.0, <1"]
docs = [
    "sphinx>=7.0.0",
    "sphinx-autodoc-typehints>=1.12.0,<2",
    "furo>=2024.8.6",
]

[dependency-groups]
dev = [
    "aiohttp >=3.10.10,<4",
    "fastapi >=0.114.0,<1",
    "mypy >=1.4.1,<2",
    "prometheus-client >=0.17.0,<1",
    "pytest >=8.3.3,<9",
    "pytest-asyncio >=0.24.0",
    "pytest-cov >=6.0.0,<7",
    "python-multipart>=0.0.20",
    "redis >=5.0.4,<6",
    "starlette-zipkin >=0.3.0,<0.4.0",
    "types-redis >=4.6.0,<6",
    "unasync >=0.6.0,<0.7",
    "uvicorn >=0.32.0",
]

doc = [
    "esbonio>=0.16.1",
    "sphinx>=7.0.0",
    "sphinx-autodoc-typehints>=1.12.0,<2",
    "furo>=2024.8.6",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
norecursedirs = "tests/unittests/scanned_resources"
testpaths = ["tests"]
filterwarnings = ["error"]

[tool.pyright]
ignore = ["examples"]
include = ["src", "tests"]
reportPrivateUsage = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportShadowedImports = false
typeCheckingMode = "strict"
venvPath = ".venv"

[[tool.mypy.overrides]]
disallow_any_generics = true
disallow_untyped_defs = true
module = "blacksmith.*"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "B",   # bug bear security warning
    "I",   # isort import order
    "F",   # pyflakes
    "UP",  # alter when better syntax is available
    "RUF", # the ruff developper's own rules
]
ignore = ["RUF022"]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "\\s+\\.\\.\\.$",
    "# coverage: ignore",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
